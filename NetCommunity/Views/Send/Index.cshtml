@model NetCommunity.ViewModels.SendMessageViewModel

@{
    ViewBag.Title = "Send";
}

<h2>Send Message</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <hr />

        <div class="form-group">
            @Html.LabelFor(model => model.Users, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.ListBoxFor(model => model.SelectedUsers, Model.Users, new Dictionary<string, object>() { { "class", "chosen" }, { "style", "width:400px;" }, { "data-placeholder", "User" } })
                @Html.ValidationMessageFor(model => model.SelectedUsers, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Groups, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.ListBoxFor(model => model.SelectedGroups, Model.Groups, new Dictionary<string, object>() { { "class", "chosen" }, { "style", "width:400px;" }, { "data-placeholder", "Group" } })
                @Html.ValidationMessageFor(model => model.SelectedGroups, "", new { @class = "text-danger" })
            </div>
        </div>


        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Content, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Content, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Content, "", new { @class = "text-danger" })


            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Send" class="btn btn-default" />
                @if (Model.SendSuccess != null)
                {
                    @Html.DisplayFor(model => model.SendSuccess, new { htmlAttributes = new { @class = "text-info" } })
                }
            </div>
        </div>
    </div>
}

@section AddToHead{
<link rel="stylesheet" href="~/Content/chosen.css">
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script src="~/Scripts/chosen.jquery.min.js"></script>
    <script>
		jQuery(document).ready(function(){
			jQuery(".chosen").data("placeholder"," ").chosen();
		});
    </script>
}

